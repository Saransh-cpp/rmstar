[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "rmstar"
description = "A tool to automatically replace 'import *' imports with explicit imports in files"
readme = { file = "README.md", content-type = "text/markdown" }
license = "MIT"
authors = [
    { name = "Saransh Chopra", email = "saransh0701@gmail.com" },
]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
dynamic = [
  "version",
]
dependencies = [
  "pyflakes",
]
[project.optional-dependencies]
dev = [
  "pytest>=6",
  "pytest-cov>=3",
  "pytest-doctestplus",
]
[project.urls]
"Bug Tracker" = "https://github.com/Saransh-cpp/rmstar/issues"
Homepage = "https://github.com/Saransh-cpp/rmstar/"
"Source Code" = "https://github.com/Saransh-cpp/rmstar"
[project.scripts]
rmstar = "rmstar.__main__:main"

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "rmstar/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/rmstar",
]

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B", "B904",   # flake8-bugbear
  "I",           # isort
  "C4",          # flake8-comprehensions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
extend-ignore = [
  "E501",        # Line too long
  "PLR0915",     # Too many statements
  "PLR0913",     # Too many arguments to function call
  "T201",        # Print statements
  "B904",        # Raise exception with `raise ... from err`
  "B023",        # Function definition does not bind loop variable
]
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]

[tool.pytest.ini_options]
minversion = "6.0"
xfail_strict = true
addopts = [
    "--doctest-modules"
]
testpaths = [
    "tests",
]
log_cli_level = "DEBUG"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]
